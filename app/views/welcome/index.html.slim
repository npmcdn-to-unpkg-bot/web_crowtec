= render 'partials/application/cover'

.intro-wrapper.relative
  .container
    .row
      .col-desktop-4.col-desktop-offset-2
        .intro-content
          h2
            .text-bold We crow your
            .text-bold
              | future
              span.red<> web
            .text-light while you have fun
          p.text-light
            | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur sagittis hendrerit risus, in gravida augue luctus id. Etiam aliquam mattis sem, vel pharetra erat mollis lacinia. Pellentesque porta augue et ligula placerat consequat. Ut ut diam venenatis sapien dictum malesuada. Vivamus vel leo sit amet magna auctor fringilla. Aliquam sit.
        .button-wrapper
          .btn.block button
    .row
      .left-semi-circle.green.col-tablet-3.col-tablet-offset-9

.works-wrapper
  h2.big-header Works
  .container
    .row.project-item-wrapper
      .project-image-wrapper.col-desktop-7.visible-from-desktop
        /= image_tag "https://newevolutiondesigns.com/images/freebies/city-wallpaper-47.jpg"
      .col-desktop-offset-7.col-desktop-5.text-center
        .project-description-wrapper
          section
            h2 CtOS Enabler
            p.description
              |CtOS Enabler framework allows you to integrate geolocation in your apps and gain competitive advantages without headaches.
            p.red.text-light
              | #Andoid #IOS
          = link_to 'more info', '#', class: 'btn green block text-light'
    .row.project-item-wrapper
      .col-desktop-5.text-center
        .project-description-wrapper
          section
            h2 CtOS Enabler
            p.description
              |CtOS Enabler framework allows you to integrate geolocation in your apps and gain competitive advantages without headaches.
            p.red.text-light
              | #Andoid #IOS
          = link_to 'more info', '#', class: 'btn green block text-light'
      .project-image-wrapper.col-desktop-7.visible-from-desktop.absolute-right


javascript:
  /*var canvas = document.getElementById('canvas')
          , context = canvas.getContext('2d')
          , img = new Image()
          , w
          , h
          , offset
          , glitchInterval;

  img.src = 'http://blog.codepen.io/wp-content/uploads/2012/06/White-Large.png';
  img.onload = function () {
    init();
    window.onresize = init;
  };

  var init = function () {
    clearInterval(glitchInterval);
    canvas.width = w = window.innerWidth;
    offset = w * .1;
    canvas.height = h = ~~(175 * ((w - (offset * 2)) / img.width));
    glitchInterval = setInterval(function () {
      clear();
      context.drawImage(img, 0, 110, img.width, 175, offset, 0, w - (offset * 2), h);
      setTimeout(glitchImg, randInt(250, 1000));
    }, 500);
  };

  var clear = function () {
    context.rect(0, 0, w, h);
    context.fill();
  };

  var glitchImg = function () {
    for (var i = 0; i < randInt(1, 2); i++) {
      var x = Math.random() * w;
      var y = Math.random() * h;
      var spliceWidth = w - x;
      var spliceHeight = randInt(5, h / 3);
      context.drawImage(canvas, 0, y, spliceWidth, spliceHeight, x, y, spliceWidth, spliceHeight);
      context.drawImage(canvas, spliceWidth, y, x, spliceHeight, 0, y, x, spliceHeight);
    }
  };

  var randInt = function (a, b) {
    return ~~(Math.random() * (b - a) + a);
  };*/